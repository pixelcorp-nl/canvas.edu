{
	"header.info": "Information",
	"header.canvas": "Canvas",
	"info.title": "About this project",
	"info.subtitle": "This project is intended for education and therefore communication is only possible through the API. It is not possible to change the canvas via the website.",
	"info.header1": "Introduction",
	"info.header2": "Making a change to the canvas",
	"info.header3": "Viewing changes in real-time",
	"info.header4": "What is JSON?",
	"info.header5": "Small example",
	"info.content1": "In this project, we will learn how to change a pixel on a canvas and make sure everyone can see the changes in real-time. We will use a special language called JSON to send messages to a server that will update the canvas for us.",
	"info.content2": "To change a pixel on the canvas, we will use Python code and a library called 'requests' in the example. It will help us send a message to a server that will update the canvas with the new color. We will use a special format called JSON to structure the message we send to the server. By the way, Python is not the only language you can use to do this. You can also use JavaScript, Java, C#, PHP, Ruby, C++, etc. It is also possible to use a different language, as long as you find a way to send a message to the server.",
	"info.content3": "When we make a change to the canvas, everyone can see the changes in real-time. This is possible thanks to a special technology called WebSocket. It allows us to send messages back and forth between the server and all devices viewing the canvas, so everyone sees the changes at the same time.",
	"info.content4": "JSON is a simple way to organize data so that computers can understand it. We will use it to send a message to the server with the color we want to use to update the pixel. JSON is really easy to read and write for humans, and it is also easy for computers to understand. Below you can see an example of a JSON message that we will send to the server.",
	"info.content5": "You can use Python, among others, to send a message to a server so you can change a pixel on the canvas. In the example below, we use the requests library to send the message in the JSON data format.",
	"code.json.title": "JSON body example",
	"code.python.title": "Python example",
	"copy": "Copy",
	"copy.success": "Copied!",
	"footer": "Made with ❤️ by",
		"code": {
			"python": {
				"comment1": "Define the URL of the API endpoint and the request headers",
				"comment2": "Define the pixel data as a Python dictionary",
				"comment3": "Send a POST request to the API endpoint with the pixel data as JSON",
				"comment4": "Check if the request was successful",
				"comment5": "If the request was successful, print a success message",
				"comment6": "If the request was unsuccessful, print an error message that includes the HTTP status code"
			}
		}
}